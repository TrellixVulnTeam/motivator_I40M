{"remainingRequest":"/Users/oke228/Desktop/desktop/_dev_projects/motivator/motivator-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/oke228/Desktop/desktop/_dev_projects/motivator/motivator-app/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/oke228/Desktop/desktop/_dev_projects/motivator/motivator-app/src/App.vue","mtime":1616601098307},{"path":"/Users/oke228/Desktop/desktop/_dev_projects/motivator/motivator-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/oke228/Desktop/desktop/_dev_projects/motivator/motivator-app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/oke228/Desktop/desktop/_dev_projects/motivator/motivator-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/oke228/Desktop/desktop/_dev_projects/motivator/motivator-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCAicmVzZXQtY3NzIjsKaW1wb3J0ICJib290c3RyYXAtNC1ncmlkIjsKaW1wb3J0IGdzYXAgZnJvbSAiZ3NhcCI7CmltcG9ydCAiQC9hc3NldHMvZm9udGVsbG8vY3NzL21vdGl2YXRvci1lbWJlZGRlZC5jc3MiOwppbXBvcnQgIkAvc3R5bGUuc2NzcyI7CmltcG9ydCBkcmFnZ2FibGUgZnJvbSAidnVlZHJhZ2dhYmxlIjsKCmltcG9ydCBDb2xsZWN0aW9ucyBmcm9tICIuL2NvbXBvbmVudHMvQ29sbGVjdGlvbnMudnVlIjsKaW1wb3J0IEJ1Y2tldHMgZnJvbSAiLi9jb21wb25lbnRzL0J1Y2tldHMudnVlIjsKaW1wb3J0IFJhbmRvbWl6ZSBmcm9tICIuL2NvbXBvbmVudHMvUmFuZG9taXplLnZ1ZSI7CmltcG9ydCBPdXRwdXQgZnJvbSAiLi9jb21wb25lbnRzL091dHB1dC52dWUiOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJBcHAiLAogIGNvbXBvbmVudHM6IHsKICAgIENvbGxlY3Rpb25zLAogICAgQnVja2V0cywKICAgIFJhbmRvbWl6ZSwKICAgIE91dHB1dCwKICAgIGRyYWdnYWJsZSwKICB9LAogIGRhdGEoKSB7CiAgICAvL2RlZmluZSBhcHAgZGF0YQogICAgcmV0dXJuIHsKICAgICAgYXBwZGF0YToge30sCiAgICAgIGNvbGxlY3Rpb25zOiBbe31dLAogICAgICBjb2xsZWN0aW9uc21lbnU6IFtdLAogICAgICBjaW5kZXg6IDAsCiAgICAgIHJhbmRvbWxpc3Q6IHt9LAogICAgICBzaG93Y29sbGVjdGlvbnM6IGZhbHNlLAogICAgICBzaG93b3V0cHV0OiBmYWxzZSwKICAgICAgb3V0cHV0Zm9vdG5vdGU6ICIiLAogICAgICBlZGl0Y29sbGVjdGlvbnRpdGxlOiBmYWxzZSwKICAgICAgc2hvd2ludHJvOiB0cnVlLAogICAgICBidWNrZXRzY2xlYXJlZDogMCwKICAgICAgYWxlcnRtZXNzYWdlOiAiIiwKICAgIH07CiAgfSwKICBjcmVhdGVkKCkgewogICAgaWYgKHRoaXMuJHdvcmtib3gpIHsKICAgICAgdGhpcy4kd29ya2JveC5hZGRFdmVudExpc3RlbmVyKCJ3YWl0aW5nIiwgKCkgPT4gewogICAgICAgIHRoaXMuc2hvd1VwZGF0ZVVJID0gdHJ1ZTsKICAgICAgfSk7CiAgICB9CiAgfSwKICBhc3luYyBhY2NlcHQoKSB7CiAgICB0aGlzLnNob3dVcGRhdGVVSSA9IGZhbHNlOwogICAgYXdhaXQgdGhpcy4kd29ya2JveC5tZXNzYWdlU1coeyB0eXBlOiAiU0tJUF9XQUlUSU5HIiB9KTsKICB9LCAgCiAgbW91bnRlZCgpIHsKICAgIC8vaW1wb3J0IGFwcCBkYXRhIGZyb20gbG9jYWxTdG9yYWdlCiAgICBpZiAobG9jYWxTdG9yYWdlLmFwcGRhdGEpIHsKICAgICAgdGhpcy5hcHBkYXRhID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuYXBwZGF0YSk7CiAgICAgIHRoaXMuY29sbGVjdGlvbnMgPSB0aGlzLmFwcGRhdGEuY29sbGVjdGlvbnM7CiAgICAgIC8vZm9jdXMgb24gY29sbGVjdGlvbiB0aXRsZSBpZiBmaXJzdCBsYXVuY2gKICAgICAgaWYgKGxvY2FsU3RvcmFnZS5maXJzdHJ1biA9PSAidHJ1ZSIpIHsKICAgICAgICB0aGlzLnNob3dpbnRybyA9IHRydWU7CiAgICAgICAgLy90aGlzLmZvY3VzSW5wdXQoInRpdGxlaW5wdXQiKTsKICAgICAgICBsb2NhbFN0b3JhZ2UuZmlyc3RydW4gPSAiZmFsc2UiOwogICAgICB9CiAgICB9CiAgICAvL2V2ZW50IGxpc3RlbmVycwogICAgdGhpcy4kcm9vdC4kb24oInNob3ctb3V0cHV0IiwgdGhpcy5zaG93T3V0cHV0KTsKICB9LAogIHdhdGNoOiB7CiAgICAvL2V4cG9ydCBhcHBkYXRhIHRvIGxvY2FsU3RvcmFnZSB3aGVuIGNoYW5nZWQgbG9jYWxseQogICAgYXBwZGF0YTogewogICAgICBoYW5kbGVyKGRhdGEpIHsKICAgICAgICBsb2NhbFN0b3JhZ2UuYXBwZGF0YSA9IEpTT04uc3RyaW5naWZ5KGRhdGEpOwogICAgICB9LAogICAgICBkZWVwOiB0cnVlLAogICAgfSwKICAgIC8vdXBkYXRlIGl0ZW1zIHdoZW4gY2hhbmdlZAogICAgY29sbGVjdGlvbnM6IHsKICAgICAgaGFuZGxlcihkYXRhKSB7CiAgICAgICAgLy9jcmVhdGUgbmF2aWdhdGlvbiBtZW51CiAgICAgICAgdGhpcy5jb2xsZWN0aW9uc21lbnUgPSBkYXRhLm1hcCgoaXRlbSkgPT4gewogICAgICAgICAgcmV0dXJuIGl0ZW0udGl0bGU7CiAgICAgICAgfSk7CiAgICAgICAgLy9yZXNldCBtZW51IHZpc2liaWxpdHkKICAgICAgICB0aGlzLnNob3djb2xsZWN0aW9ucyA9IGZhbHNlOwogICAgICB9LAogICAgICBkZWVwOiB0cnVlLAogICAgfSwKICB9LAogIG1ldGhvZHM6IHsKICAgIC8vSW50cm8gdHJhbnNpdGlvbgogICAgYW5pbWF0ZUludHJvOiBmdW5jdGlvbiAoZGlyKSB7CiAgICAgIHZhciBzY29wZSA9IHRoaXM7CiAgICAgIC8vY3JlYXRlIGFuaW1hdGlvbiB0aW1lbGluZQogICAgICB2YXIgYWkgPSBnc2FwLnRpbWVsaW5lKHsKICAgICAgICBkZWZhdWx0czogeyBkdXJhdGlvbjogMC4yIH0sCiAgICAgICAgb25Db21wbGV0ZTogZnVuY3Rpb24gKCkgewogICAgICAgICAgc2NvcGUuc2hvd2ludHJvID0gZmFsc2U7CiAgICAgICAgfSwKICAgICAgfSk7CiAgICAgIC8vYWRkIHR3ZWVuIHRvIHRpbWVsaW5lCiAgICAgIGFpLmZyb21UbygKICAgICAgICAiLmludHJvIiwKICAgICAgICB7CiAgICAgICAgICBvcGFjaXR5OiAxLAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgb3BhY2l0eTogMCwKICAgICAgICAgIGVhc2U6ICJzdHJvbmcuZWFzZU91dCIsCiAgICAgICAgfSwKICAgICAgICAwCiAgICAgICk7CiAgICAgIGFpLnBhdXNlKCk7CiAgICAgIC8vIGRldGVybWluZSBhbmltYXRpb24gZGlyZWN0aW9uIGFuZCBwbGF5CiAgICAgIGlmIChkaXIgPT0gInJldmVyc2UiKSB7CiAgICAgICAgYWkucHJvZ3Jlc3MoMSk7CiAgICAgICAgYWkucmV2ZXJzZSgwKTsKCiAgICAgICAgdGhpcy5zaG93aW50cm8gPSB0cnVlOwogICAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHsKICAgICAgICAgIC8vc2Nyb2xsIHRvIHRvcCBvZiBpbnRybwogICAgICAgICAgdGhpcy4kcmVmcy5pbnRyby5zY3JvbGxUb3AgPSAwOwogICAgICAgIH0pOwogICAgICB9IGVsc2UgewogICAgICAgIGlmIChkaXIgPT09IHRoaXMuY2luZGV4KSB7CiAgICAgICAgICB0aGlzLiRyZWZzLmJ1Y2tldHNsaXN0LmFuaW1hdGVCdWNrZXRzKCk7CiAgICAgICAgfQogICAgICAgIGFpLnBsYXkoKTsKICAgICAgfQogICAgfSwKICAgIC8vQ29sbGVjdGlvbiBvcHRpb25zCiAgICBhZGRDb2xsZWN0aW9uOiBmdW5jdGlvbiAob3B0aW9uKSB7CiAgICAgIC8vYWRkIG5ldyBjb2xsZWN0aW9uIHRvIGFwcCBkYXRhCiAgICAgIHZhciBuZXdjb2xsZWN0aW9uID0ge307CgogICAgICAvL2R1cGxpY2F0ZSBjdXJyZW50IGNvbGxlY3Rpb24gb3B0aW9uCiAgICAgIGlmIChvcHRpb24gPT09ICJkdXBsaWNhdGUiKSB7CiAgICAgICAgLy9zdHJpbmdpZnkgdGhlbiBwYXJzZSB0byBhdm9pZCBtdXRhdGlvbiB3aGVuIGNvcHlpbmcKICAgICAgICBuZXdjb2xsZWN0aW9uID0gSlNPTi5wYXJzZSgKICAgICAgICAgIEpTT04uc3RyaW5naWZ5KHRoaXMuY29sbGVjdGlvbnNbdGhpcy5jaW5kZXhdKQogICAgICAgICk7CiAgICAgICAgbmV3Y29sbGVjdGlvbi50aXRsZSArPSAiIGNvcHkiOwogICAgICB9IGVsc2UgewogICAgICAgIC8vbG9hZCBpbiBibGFuayBjb2xsZWN0aW9uIG9iamVjdCBpZiBuZXcKICAgICAgICBuZXdjb2xsZWN0aW9uID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuYmxhbmtjb2xsZWN0aW9uKTsKICAgICAgICAvL2NoYW5nZSB0aXRsZSBmb3IgbmV3IGNvbGxlY3Rpb24KICAgICAgICBuZXdjb2xsZWN0aW9uLnRpdGxlID0gIkNvbGxlY3Rpb24gIiArICh0aGlzLmNvbGxlY3Rpb25zLmxlbmd0aCArIDEpOwogICAgICB9CiAgICAgIC8vYWRkIG5ldyBjb2xsZXRpb24gdG8gbWFpbiBvYmplY3QKICAgICAgdGhpcy5jb2xsZWN0aW9ucy5wdXNoKG5ld2NvbGxlY3Rpb24pOwogICAgICAvL2xvYWQgbmV3IGNvbGxlY3Rpb24gaW50byBhcHAKICAgICAgdGhpcy5sb2FkQ29sbGVjdGlvbih0aGlzLmNvbGxlY3Rpb25zLmxlbmd0aCAtIDEsIHRydWUpOwogICAgfSwKICAgIGxvYWRDb2xsZWN0aW9uOiBmdW5jdGlvbiAoaW5kZXgsIGlzbmV3KSB7CiAgICAgIC8vdXNlIG5leHQgdGljayBmb3IgZm9jdXMgZXZlbnQKICAgICAgdGhpcy4kbmV4dFRpY2soZnVuY3Rpb24gKCkgewogICAgICAgIC8vc2V0IGZvY3VzIHRvIHRpdGxlIGZvciBuZXdseSBhZGRlZCBjb2xsZWN0aW9uCiAgICAgICAgaWYgKGlzbmV3KSB7CiAgICAgICAgICB0aGlzLmZvY3VzSW5wdXQoInRpdGxlaW5wdXQiKTsKICAgICAgICB9CiAgICAgICAgLy9yZXNldCBtZW51IHZpc2liaWxpdHkKICAgICAgICB0aGlzLnNob3djb2xsZWN0aW9ucyA9IGZhbHNlOwogICAgICAgIC8vc2V0IGNpbmRleCB0byBjb2xsZWN0aW9uOiB1c2VkIGdsYWJhbGx5CiAgICAgICAgdGhpcy5jaW5kZXggPSBwYXJzZUludChpbmRleCk7CiAgICAgIH0pOwogICAgfSwKICAgIC8vZGVsZXRlIGN1cnJlbnQgY29sbGVjdGlvbgogICAgZGVsZXRlQ29sbGVjdGlvbjogZnVuY3Rpb24gKCkgewogICAgICAvL2NvcHkgY2luZGV4IGJlZm9yZSBjaGFuZ2luZwogICAgICB2YXIgaW5kZXggPSB0aGlzLmNpbmRleDsKICAgICAgLy9jaGFuZ2UgY2luZGV4IHRvIGFjY291bnQgZm9yIG9uZSBsZXNzIGl0ZW0KICAgICAgaWYgKHRoaXMuY2luZGV4ID4gMCkgewogICAgICAgIHRoaXMuY2luZGV4ID0gdGhpcy5jaW5kZXggLSAxOwogICAgICB9CiAgICAgIC8vaWYgbGFzdCBjb2xsZWN0aW9uIGNsZWFyIGl0ZW1zCiAgICAgIGlmICh0aGlzLmNvbGxlY3Rpb25zLmxlbmd0aCA8PSAxKSB7CiAgICAgICAgdGhpcy5jb2xsZWN0aW9uc1tpbmRleF0udGl0bGUgPSAiQ29sbGVjdGlvbiAxIjsKICAgICAgICB0aGlzLmNvbGxlY3Rpb25zW2luZGV4XS5idWNrZXRzID0gW107CiAgICAgICAgdGhpcy5jb2xsZWN0aW9uc1tpbmRleF0ubGlzdG9wdGlvbnMgPSB7CiAgICAgICAgICBsaXN0Y291bnQ6IDAsCiAgICAgICAgICBsaXN0YnVja2V0czogWyJBbGwiXSwKICAgICAgICAgIHByZXZlbnRkdXBsaWNhdGVzOiB0cnVlLAogICAgICAgICAgYnVja2V0Y3ljbGU6ICJyYW5kb20iLAogICAgICAgIH07CiAgICAgICAgdGhpcy5jb2xsZWN0aW9uc1tpbmRleF0ucmVtb3ZlZGVsZXRlZGl0ZW1zID0gZmFsc2U7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgLy9kZWxldGUgY3VycmVudCBjb2xsZWN0aW9uCiAgICAgICAgdGhpcy5jb2xsZWN0aW9ucy5zcGxpY2UoaW5kZXgsIDEpOwogICAgICB9CiAgICB9LAogICAgLy9mb3IgZWRpdGluZyBjb2xsZWN0aW9uIHRpdGxlCiAgICBmb2N1c0lucHV0OiBmdW5jdGlvbiAoaW5wdXQpIHsKICAgICAgdGhpcy5lZGl0Y29sbGVjdGlvbnRpdGxlID0gdHJ1ZTsKICAgICAgdGhpcy4kbmV4dFRpY2soZnVuY3Rpb24gKCkgewogICAgICAgIHRoaXMuJHJlZnNbaW5wdXRdLmZvY3VzKCk7CiAgICAgICAgdGhpcy4kcmVmc1tpbnB1dF0uc2VsZWN0KCk7CiAgICAgIH0pOwogICAgfSwKCiAgICAvL0J1Y2tldCBvcHRpb25zCiAgICBhZGRCdWNrZXQ6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIGN1cnJidWNrZXRzID0gdGhpcy5jb2xsZWN0aW9uc1t0aGlzLmNpbmRleF0uYnVja2V0czsKICAgICAgdmFyIG5ld2J1Y2tldCA9IHsKICAgICAgICBuYW1lOiAiQnVja2V0IExpc3QgIiArIChjdXJyYnVja2V0cy5sZW5ndGggKyAxKSwKICAgICAgICBpdGVtczogWyJpdGVtIDEiLCAiaXRlbSAyIiwgIml0ZW0gMyJdLAogICAgICAgIHRyYXNoZWQ6IFtdLAogICAgICB9OwogICAgICBjdXJyYnVja2V0cy5wdXNoKG5ld2J1Y2tldCk7CiAgICB9LAogICAgZGVsZXRlQnVja2V0OiBmdW5jdGlvbiAoaW5kZXgpIHsKICAgICAgdmFyIGN1cnJidWNrZXRzID0gdGhpcy5jb2xsZWN0aW9uc1t0aGlzLmNpbmRleF0uYnVja2V0czsKICAgICAgdmFyIGN1cnJsaXN0YnVja2V0cyA9IHRoaXMuY29sbGVjdGlvbnNbdGhpcy5jaW5kZXhdLmxpc3RvcHRpb25zCiAgICAgICAgLmxpc3RidWNrZXRzOwogICAgICB2YXIgYmluZGV4ID0gY3Vycmxpc3RidWNrZXRzLmluZGV4T2YoaW5kZXgpOwoKICAgICAgaWYgKGJpbmRleCA+IC0xKSB7CiAgICAgICAgY3Vycmxpc3RidWNrZXRzLnNwbGljZShiaW5kZXgsIDEpOwogICAgICAgIGZvciAodmFyIGIgPSBiaW5kZXg7IGIgPCBjdXJybGlzdGJ1Y2tldHMubGVuZ3RoOyBiKyspIHsKICAgICAgICAgIGN1cnJsaXN0YnVja2V0c1tiXS0tOwogICAgICAgIH0KICAgICAgfQogICAgICBpZiAoY3Vycmxpc3RidWNrZXRzLmxlbmd0aCA9PSAwKSB7CiAgICAgICAgY3Vycmxpc3RidWNrZXRzWzBdID0gIkFsbCI7CiAgICAgIH0KCiAgICAgIHRoaXMuJHJlZnMuYnVja2V0c2xpc3QuZGVsZXRlZCA9IGluZGV4OwogICAgICBjdXJyYnVja2V0cy5zcGxpY2UoaW5kZXgsIDEpOwogICAgfSwKCiAgICAvL1JhbmRvbWl6ZSBvcHRpb25zCiAgICBnZW5lcmF0ZUxpc3Q6IGZ1bmN0aW9uIChsaXN0b3B0aW9ucykgewogICAgICB2YXIgbGlzdGNvdW50ID0gbGlzdG9wdGlvbnMubGlzdGNvdW50OwogICAgICB2YXIgbGlzdGJ1Y2tldHMgPSBsaXN0b3B0aW9ucy5saXN0YnVja2V0czsKICAgICAgdmFyIHByZXZlbnRkdXBsaWNhdGVzID0gbGlzdG9wdGlvbnMucHJldmVudGR1cGxpY2F0ZXM7CiAgICAgIHZhciBidWNrZXRjeWNsZSA9IGxpc3RvcHRpb25zLmJ1Y2tldGN5Y2xlOwoKICAgICAgLy9yZXNldCBsaXN0IGRhdGEKICAgICAgdGhpcy5yYW5kb21saXN0ID0ge307CiAgICAgIHRoaXMuYnVja2V0cyA9IHRoaXMuY29sbGVjdGlvbnNbdGhpcy5jaW5kZXhdLmJ1Y2tldHM7CiAgICAgIHRoaXMub3V0cHV0Zm9vdG5vdGUgPSAiIjsKCiAgICAgIC8vZ2VuZXJhdGUgcmFuZG9tbGlzdGNvdW50IG51bWJlciBpZiAwCiAgICAgIGlmIChsaXN0Y291bnQgPT0gMCkgewogICAgICAgIGxpc3Rjb3VudCA9IHRoaXMuZ2V0UmFuZG9tSW50KAogICAgICAgICAgdGhpcy5nZXRCdWNrZXRJdGVtc0xlbmd0aCh0aGlzLmJ1Y2tldHMsIGxpc3RidWNrZXRzKQogICAgICAgICk7CiAgICAgICAgbGlzdGNvdW50Kys7CiAgICAgIH0KCiAgICAgIC8vcHJldmVudCBkdXBsaWNhdGVzOiB0byBhdm9pZCBpbmZpbml0ZSBsb29wCiAgICAgIGlmIChwcmV2ZW50ZHVwbGljYXRlcykgewogICAgICAgIHZhciBpdGVtY291bnQgPSB0aGlzLmdldEJ1Y2tldEl0ZW1zTGVuZ3RoKHRoaXMuYnVja2V0cywgbGlzdGJ1Y2tldHMpOwogICAgICAgIGlmIChsaXN0Y291bnQgPiBpdGVtY291bnQpIHsKICAgICAgICAgIGxpc3Rjb3VudCA9IGl0ZW1jb3VudDsKICAgICAgICAgIHRoaXMub3V0cHV0Zm9vdG5vdGUgPSAiKmNvdW50IGV4Y2VlZGVkIGF2YWlsYWJsZSBpdGVtcyI7CiAgICAgICAgfQogICAgICB9CgogICAgICB2YXIgcyA9IDA7CiAgICAgIHZhciBpdGVtaW5kZXhsaXN0ID0gW107CiAgICAgIC8vY3JlYXRlIGxvb3AgYmFzZWQgb24gdXNlciBpbnB1dCBudW1iZXIKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Y291bnQ7IGkrKykgewogICAgICAgIHZhciB0aGlzYnVja2V0OwoKICAgICAgICAvL2lmIGJ1Y2tldGN5Y2xlIGlzIFJBTkRPTSAoZGVmYXVsdCkKICAgICAgICBpZiAoYnVja2V0Y3ljbGUgPT0gInJhbmRvbSIgfHwgIWJ1Y2tldGN5Y2xlKSB7CiAgICAgICAgICAvL3BpY2sgcmFuZG9tIGJ1Y2tldCBmcm9tIGFsbAogICAgICAgICAgdGhpc2J1Y2tldCA9IHRoaXMuZ2V0UmFuZG9tSW50KHRoaXMuYnVja2V0cy5sZW5ndGgpOwogICAgICAgICAgLy9waWNrIHJhbmRvbSBidWNrZXQgZnJvbSBzZWxlY3RlZAogICAgICAgICAgaWYgKGxpc3RidWNrZXRzICYmIGxpc3RidWNrZXRzWzBdICE9ICJBbGwiKSB7CiAgICAgICAgICAgIHRoaXNidWNrZXQgPSBsaXN0YnVja2V0c1t0aGlzLmdldFJhbmRvbUludChsaXN0YnVja2V0cy5sZW5ndGgpXTsKICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIC8vaWYgYnVja2V0Y3ljbGUgaXMgU0VRVUVOVElBTAogICAgICAgIGlmIChidWNrZXRjeWNsZSA9PSAic2VxdWVudGlhbCIpIHsKICAgICAgICAgIC8vcGljayBzZXF1ZW50aWFsIGJ1Y2tldCBmcm9tIGFsbAogICAgICAgICAgaWYgKCFsaXN0YnVja2V0cyB8fCBsaXN0YnVja2V0c1swXSA9PSAiQWxsIikgewogICAgICAgICAgICB0aGlzYnVja2V0ID0gczsKICAgICAgICAgICAgLy9yZXNldCBjb3VudGVyIGlmIG1heGVkCiAgICAgICAgICAgIGlmIChzICsgMSA+PSB0aGlzLmJ1Y2tldHMubGVuZ3RoKSB7CiAgICAgICAgICAgICAgcyA9IC0xOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgICAvL3BpY2sgcmFuZG9tIGJ1Y2tldCBmcm9tIHNlbGVjdGVkCiAgICAgICAgICBpZiAobGlzdGJ1Y2tldHMgJiYgbGlzdGJ1Y2tldHNbMF0gIT0gIkFsbCIpIHsKICAgICAgICAgICAgdGhpc2J1Y2tldCA9IGxpc3RidWNrZXRzW3NdOwogICAgICAgICAgICAvL3Jlc2V0IGNvdW50ZXIgaWYgbWF4ZWQKICAgICAgICAgICAgaWYgKHMgKyAxID49IGxpc3RidWNrZXRzLmxlbmd0aCkgewogICAgICAgICAgICAgIHMgPSAtMTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgICAgcysrOwogICAgICAgIH0KCiAgICAgICAgLy9zZWxlY3QgcmFuZG9tIGl0ZW0gZnJvbSBidWNrZXQKICAgICAgICB2YXIgdGhpc2l0ZW0gPSB0aGlzLmdldFJhbmRvbUludCh0aGlzLmJ1Y2tldHNbdGhpc2J1Y2tldF0uaXRlbXMubGVuZ3RoKTsKCiAgICAgICAgLy9jcmVhdGUgaW5kZXggb2YgaXRlbQogICAgICAgIHZhciBpdGVtaW5kZXggPSB0aGlzYnVja2V0ICsgIi0iICsgdGhpc2l0ZW07CgogICAgICAgIC8vcHJldmVudCBkdXBsaWNhdGU6IHN0YXJ0IG92ZXIgaWYgZHVwbGljYXRlCiAgICAgICAgaWYgKHByZXZlbnRkdXBsaWNhdGVzKSB7CiAgICAgICAgICBpZiAoaXRlbWluZGV4bGlzdC5pbmRleE9mKGl0ZW1pbmRleCkgPj0gMCkgewogICAgICAgICAgICBpLS07CiAgICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgLy9hZGQgaW5kZXggdG8gaW5kZXggbGlzdAogICAgICAgIGl0ZW1pbmRleGxpc3QucHVzaChpdGVtaW5kZXgpOwogICAgICB9CgogICAgICAvL2Zvcm1hdCBpdGVtcyBmcm9tIGluZGV4bGlzdCBhbmQgYWRkIHRvIHJhbmRvbWxpc3Qgb2JqZWN0CiAgICAgIGZvciAodmFyIHggPSAwOyB4IDwgaXRlbWluZGV4bGlzdC5sZW5ndGg7IHgrKykgewogICAgICAgIHZhciBieCA9IGl0ZW1pbmRleGxpc3RbeF0uc3BsaXQoIi0iKS5tYXAoTnVtYmVyKTsKCiAgICAgICAgdGhpcy5yYW5kb21saXN0W2J4WzBdXSA9IHsKICAgICAgICAgIG5hbWU6ICIiLAogICAgICAgICAgaXRlbXM6IFtdLAogICAgICAgICAgaXRlbWtleXM6IFtdLAogICAgICAgIH07CiAgICAgIH0KCiAgICAgIGZvciAodmFyIHkgPSAwOyB5IDwgaXRlbWluZGV4bGlzdC5sZW5ndGg7IHkrKykgewogICAgICAgIHZhciBieSA9IGl0ZW1pbmRleGxpc3RbeV0uc3BsaXQoIi0iKS5tYXAoTnVtYmVyKTsKCiAgICAgICAgdGhpcy5yYW5kb21saXN0W2J5WzBdXS5uYW1lID0gdGhpcy5idWNrZXRzW2J5WzBdXS5uYW1lOwogICAgICAgIHRoaXMucmFuZG9tbGlzdFtieVswXV0uaXRlbXMucHVzaCh0aGlzLmJ1Y2tldHNbYnlbMF1dLml0ZW1zW2J5WzFdXSk7CiAgICAgICAgdGhpcy5yYW5kb21saXN0W2J5WzBdXS5pdGVta2V5cy5wdXNoKGJ5WzBdICsgIi0iICsgYnlbMV0pOwogICAgICB9CgogICAgICB0aGlzLnNob3dvdXRwdXQgPSB0cnVlOwogICAgfSwKICAgIGdldEJ1Y2tldEl0ZW1zTGVuZ3RoOiBmdW5jdGlvbiAoYnVja2V0cywgYnVja2V0c2xpc3QpIHsKICAgICAgdmFyIGJ1Y2tldGl0ZW1zID0gMDsKCiAgICAgIC8vQWRkIGFsbCBidWNrZXRzIHRvIGxpc3QgaWYgQUxMIGlzIHNlbGVjdGVkCiAgICAgIGlmIChidWNrZXRzbGlzdFswXSA9PSAiQWxsIikgewogICAgICAgIGJ1Y2tldHNsaXN0ID0gW107CiAgICAgICAgYnVja2V0cy5tYXAoKGIsIGluZGV4KSA9PiB7CiAgICAgICAgICBidWNrZXRzbGlzdC5wdXNoKGluZGV4KTsKICAgICAgICB9KTsKICAgICAgfQoKICAgICAgLy9jb3VudCBhbGwgYnVja2V0IGxpc3QgaXRlbXMKICAgICAgYnVja2V0c2xpc3QubWFwKChsaXN0YnVja2V0KSA9PiB7CiAgICAgICAgYnVja2V0aXRlbXMgKz0gYnVja2V0c1tsaXN0YnVja2V0XS5pdGVtcy5sZW5ndGg7CiAgICAgIH0pOwoKICAgICAgcmV0dXJuIGJ1Y2tldGl0ZW1zOwogICAgfSwKICAgIGdldFJhbmRvbUludDogZnVuY3Rpb24gKG1heCkgewogICAgICByZXR1cm4gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogTWF0aC5mbG9vcihtYXgpKTsKICAgIH0sCiAgICAvL2hpZGUgb3V0cHV0IHdpbmRvdwogICAgY2xvc2VPdXRwdXQ6IGZ1bmN0aW9uIChkZWxldGVkKSB7CiAgICAgIC8vcmVtb3ZlIGRlbGV0ZWQgaXRlbXMgZnJvbSBzeXN0ZW0KICAgICAgaWYgKAogICAgICAgIGRlbGV0ZWQubGVuZ3RoID4gMCAmJgogICAgICAgIHRoaXMuY29sbGVjdGlvbnNbdGhpcy5jaW5kZXhdLnJlbW92ZWRlbGV0ZWRpdGVtcwogICAgICApIHsKICAgICAgICAvL2NvbnZlcnQgZGVsZXRlZCBsaXN0IHRvIGxpc3RrZXlzCiAgICAgICAgdmFyIGRlbGV0ZWtleXMgPSBbXTsKICAgICAgICB2YXIgc2NvcGUgPSB0aGlzOwogICAgICAgIGRlbGV0ZWQubWFwKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICBpdGVtID0gaXRlbS5zcGxpdCgiLSIpOwogICAgICAgICAgZGVsZXRla2V5cy5wdXNoKHNjb3BlLnJhbmRvbWxpc3RbaXRlbVswXV0uaXRlbWtleXNbaXRlbVsxXV0pOwogICAgICAgIH0pOwogICAgICAgIC8vZGVkdXBlIGRlbGV0ZWQgaXRlbXMKICAgICAgICB2YXIgZGVkdXBlZCA9IFtdOwogICAgICAgIGRlbGV0ZWtleXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICBpZiAoIWRlZHVwZWQuaW5jbHVkZXMoaXRlbSkpIHsKICAgICAgICAgICAgZGVkdXBlZC5wdXNoKGl0ZW0pOwogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICAgIC8vc29ydCBkZWR1cGVkIGluIGFzY2VuZGluZyBvcmRlcgogICAgICAgIHZhciBzb3J0ZWQgPSBbWy0xLCAtMV1dOwogICAgICAgIGRlZHVwZWQubWFwKGZ1bmN0aW9uIChpdGVtLCBpbmRleCkgewogICAgICAgICAgaXRlbSA9IGl0ZW0uc3BsaXQoIi0iKS5tYXAoTnVtYmVyKTsKICAgICAgICAgIGZvciAodmFyIGkgPSBpbmRleDsgaSA+PSAwOyBpLS0pIHsKICAgICAgICAgICAgaWYgKGl0ZW1bMF0gPiBzb3J0ZWRbaV1bMF0pIHsKICAgICAgICAgICAgICBzb3J0ZWQuc3BsaWNlKGkgKyAxLCAwLCBpdGVtKTsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfSBlbHNlIGlmIChpdGVtWzBdID09PSBzb3J0ZWRbaV1bMF0gJiYgaXRlbVsxXSA+IHNvcnRlZFtpXVsxXSkgewogICAgICAgICAgICAgIHNvcnRlZC5zcGxpY2UoaSArIDEsIDAsIGl0ZW0pOwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgICAgc29ydGVkLnNwbGljZSgwLCAxKTsKCiAgICAgICAgLy9hZGQgZGVsZXRlZCBpdGVtcyB0byBidWNrZXQgdHJhc2gKICAgICAgICBzb3J0ZWQubWFwKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICBzY29wZS5jb2xsZWN0aW9uc1tzY29wZS5jaW5kZXhdLmJ1Y2tldHNbaXRlbVswXV0udHJhc2hlZC51bnNoaWZ0KAogICAgICAgICAgICBwYXJzZUludChpdGVtWzFdKQogICAgICAgICAgKTsKICAgICAgICB9KTsKCiAgICAgICAgLy9wYXVzZSBmb3IgYW5pbWF0aW9uCiAgICAgICAgZ3NhcC5kZWxheWVkQ2FsbCgxLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAvL2xvb3AgdGhyb3VnaCBidWNrZXRzIHRvIHJlbW92ZSB0YWdnZWQgaXRlbXMKICAgICAgICAgIC8vYnVja2V0IGxvb3AKICAgICAgICAgIGZvciAoCiAgICAgICAgICAgIHZhciBpID0gMDsKICAgICAgICAgICAgaSA8IHNjb3BlLmNvbGxlY3Rpb25zW3Njb3BlLmNpbmRleF0uYnVja2V0cy5sZW5ndGg7CiAgICAgICAgICAgIGkrKwogICAgICAgICAgKSB7CiAgICAgICAgICAgIC8vaXRlbSBsb29wCiAgICAgICAgICAgIGZvciAoCiAgICAgICAgICAgICAgdmFyIHggPSAwOwogICAgICAgICAgICAgIHggPCBzY29wZS5jb2xsZWN0aW9uc1tzY29wZS5jaW5kZXhdLmJ1Y2tldHNbaV0udHJhc2hlZC5sZW5ndGg7CiAgICAgICAgICAgICAgeCsrCiAgICAgICAgICAgICkgewogICAgICAgICAgICAgIHZhciB0cmFzaGVkaXRlbSA9CiAgICAgICAgICAgICAgICBzY29wZS5jb2xsZWN0aW9uc1tzY29wZS5jaW5kZXhdLmJ1Y2tldHNbaV0udHJhc2hlZFt4XTsKICAgICAgICAgICAgICBzY29wZS5jb2xsZWN0aW9uc1tzY29wZS5jaW5kZXhdLmJ1Y2tldHNbaV0uaXRlbXMuc3BsaWNlKAogICAgICAgICAgICAgICAgdHJhc2hlZGl0ZW0sCiAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgKTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgLy9lbXB0eSB0cmFzaAogICAgICAgICAgICBzY29wZS5jb2xsZWN0aW9uc1tzY29wZS5jaW5kZXhdLmJ1Y2tldHNbaV0udHJhc2hlZCA9IFtdOwoKICAgICAgICAgICAgLy9kZWxldGUgYnVja2V0IGlmIGVtcHR5CiAgICAgICAgICAgIGlmIChzY29wZS5jb2xsZWN0aW9uc1tzY29wZS5jaW5kZXhdLmJ1Y2tldHNbaV0uaXRlbXMubGVuZ3RoID09IDApIHsKICAgICAgICAgICAgICBzY29wZS5kZWxldGVCdWNrZXQoaSk7CiAgICAgICAgICAgICAgc2NvcGUuc2hvd0FsZXJ0KCk7CiAgICAgICAgICAgICAgLy9iYWNrIHVwIGJ1Y2tldCBsb29wIGZvciBvbmUgbGVzcyBidWNrZXQKICAgICAgICAgICAgICBpLS07CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgfQogICAgICAvLyBmaW5hbGx5IGhpZGUgb3V0cHV0IHdpbmRvdwogICAgICB0aGlzLnNob3dPdXRwdXQoZmFsc2UpOwogICAgfSwKICAgIC8vY29udHJvbGxzIG91dHB1dCB3aW5kb3cgdmlzaWJpbGl0eQogICAgc2hvd091dHB1dDogZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgLy90cnVlIHRvIHNob3csIGZhbHNlIHRvIGhpZGUKICAgICAgdGhpcy5zaG93b3V0cHV0ID0gZGF0YTsKICAgIH0sCiAgICBzaG93QWxlcnQ6IGZ1bmN0aW9uICgpIHsKICAgICAgLy9jb25zdHJ1Y3QgYWxlcnQgbWVzc2FnZQogICAgICB0aGlzLmJ1Y2tldHNjbGVhcmVkKys7CiAgICAgIHRoaXMuYWxlcnRtZXNzYWdlID0gdGhpcy5idWNrZXRzY2xlYXJlZCArICIgYnVja2V0IjsKICAgICAgaWYgKHRoaXMuYnVja2V0c2NsZWFyZWQgPiAxKSB7CiAgICAgICAgdGhpcy5hbGVydG1lc3NhZ2UgKz0gInMiOwogICAgICB9CiAgICAgIHRoaXMuYWxlcnRtZXNzYWdlICs9ICIgZW1wdGllZCI7CiAgICAgIGlmICh0aGlzLmNvbGxlY3Rpb25zW3RoaXMuY2luZGV4XS5idWNrZXRzLmxlbmd0aCA9PT0gMCkgewogICAgICAgIHRoaXMuYWxlcnRtZXNzYWdlID0gIkFsbCBidWNrZXRzIGVtcHRpZWQiOwogICAgICB9CiAgICAgIC8vYW5pbWF0ZSBhbGVydCBwb3B1cAogICAgICB2YXIgc2NvcGUgPSB0aGlzOwogICAgICBnc2FwLmZyb21UbygKICAgICAgICAiLmFsZXJ0IiwKICAgICAgICAxLAogICAgICAgIHsgb3BhY2l0eTogMCB9LAogICAgICAgIHsKICAgICAgICAgIG9wYWNpdHk6IDIsCiAgICAgICAgICBlYXNlOiAicG93ZXI0LmVhc2VPdXQiLAogICAgICAgICAgb25Db21wbGV0ZTogZnVuY3Rpb24gKCkgewogICAgICAgICAgICB0aGlzLnJldmVyc2UoKTsKICAgICAgICAgIH0sCiAgICAgICAgICBvblJldmVyc2VDb21wbGV0ZTogZnVuY3Rpb24gKCkgewogICAgICAgICAgICAvL3Jlc2V0CiAgICAgICAgICAgIHNjb3BlLmJ1Y2tldHNjbGVhcmVkID0gMDsKICAgICAgICAgIH0sCiAgICAgICAgfQogICAgICApOwogICAgfSwKICB9LAp9Owo="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\" :class=\"{ noscroll: showintro }\">\n    <div\n      class=\"container-fluid intro\"\n      ref=\"intro\"\n      :class=\"{ hidden: !showintro }\"\n    >\n      <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"col-md introcopy\">\n            <h2><i class=\"icon-check-1\"></i>Motivator</h2>\n            <p>\n              A list making app to help mix up routines and skirt indecision.\n              Sort items into buckets and collections then create radomly\n              generated to-do lists. Check off and delete items to track\n              progress and empty buckets, and be more motivated!\n            </p>\n          </div>\n          <div class=\"col-md intromenu\">\n            Open collection:\n\n            <ul>\n              <draggable\n                :list=\"collections\"\n                group=\"collectionlist\"\n                ghostClass=\"ghost\"\n                draggable=\".menuitem\"\n                delay=\"100\"\n              >\n                <li\n                  class=\"menuitem\"\n                  v-for=\"(collection, index) in collections\"\n                  v-bind:key=\"index\"\n                >\n                  <a\n                    href=\"javascript:void(0)\"\n                    @click=\"\n                      loadCollection(index);\n                      animateIntro(index);\n                    \"\n                    >{{ collection.title }}</a\n                  >\n                </li>\n                <li class=\"addnewcollection\">\n                  <a\n                    href=\"javascript:void(0)\"\n                    @click=\"\n                      addCollection();\n                      animateIntro();\n                    \"\n                    ><i class=\"icon-plus\"></i> New</a\n                  >\n                </li>\n              </draggable>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n    <header class=\"header container-fluid\">\n      <div class=\"row\">\n        <div class=\"col\">\n          <div class=\"brand\">\n            <h1>\n              <a href=\"javascript:void(0)\" @click=\"animateIntro('reverse')\"\n                ><i class=\"icon-check-1\"></i>Motivator</a\n              >\n            </h1>\n          </div>\n          <nav>\n            <div class=\"menutoggle\">\n              <span class=\"menutitle\">Collections:</span\n              ><button\n                class=\"icon menu-button\"\n                @click=\"\n                  {\n                    showcollections = !showcollections;\n                  }\n                \"\n              >\n                <i class=\"icon-menu\"></i>\n              </button>\n            </div>\n            <Collections\n              v-bind:collectionsmenu=\"collectionsmenu\"\n              v-bind:cindex=\"cindex\"\n              v-bind:title=\"collections[cindex].title\"\n              v-bind:showcollections=\"showcollections\"\n              v-on:addcollection=\"addCollection\"\n              v-on:loadcollection=\"loadCollection\"\n              v-on:deletecollection=\"deleteCollection\"\n            />\n          </nav>\n        </div>\n      </div>\n    </header>\n    <main id=\"maincontent\" class=\"main container-fluid no-gutters p-0\">\n      <div class=\"page-title container-fluid\">\n        <div class=\"row\">\n          <div class=\"col\">\n            <h2\n              v-show=\"!editcollectiontitle\"\n              @focus=\"focusInput('titleinput')\"\n              @click=\"editcollectiontitle = true\"\n              tabindex=\"0\"\n            >\n              <i class=\"icon-pencil-alt\"></i> {{ collections[cindex].title }}\n            </h2>\n            <input\n              v-show=\"editcollectiontitle\"\n              type=\"text\"\n              ref=\"titleinput\"\n              v-model=\"collections[cindex].title\"\n              @blur=\"editcollectiontitle = false\"\n              @keyup.enter=\"editcollectiontitle = false\"\n            />\n          </div>\n        </div>\n      </div>\n      <div class=\"main-body container\">\n        <div class=\"row\">\n          <div class=\"buckets-panel col-md-8 col-xl-9\">\n            <Buckets\n              ref=\"bucketslist\"\n              v-bind:buckets=\"collections[cindex].buckets\"\n              v-on:addbucket=\"addBucket\"\n              v-on:deletebucket=\"deleteBucket\"\n            />\n          </div>\n          <div class=\"randomize-panel col-md-4 col-xl-3\">\n            <Randomize\n              v-bind:buckets=\"collections[cindex].buckets\"\n              v-bind:listoptions=\"collections[cindex].listoptions\"\n              v-on:generatelist=\"generateList\"\n            />\n          </div>\n        </div>\n      </div>\n    </main>\n    <Output\n      v-if=\"showoutput\"\n      v-bind:randomlist=\"randomlist\"\n      v-bind:footnote=\"outputfootnote\"\n      v-bind:removedeleteditems.sync=\"collections[cindex].removedeleteditems\"\n      v-on:closeoutput=\"closeOutput\"\n    />\n    <div class=\"alert\" :class=\"{ showing: bucketscleared > 0 }\">\n      <div class=\"alert-inner\">\n        <h3>\n          {{ alertmessage }}\n        </h3>\n        <p>Good job!</p>\n      </div>\n    </div>\n    <footer class=\"footer container-fluid\">\n      *App data is saved to browser cache. &copy; Keef Studio 2021.\n    </footer>\n  </div>\n</template>\n\n<script>\nimport \"reset-css\";\nimport \"bootstrap-4-grid\";\nimport gsap from \"gsap\";\nimport \"@/assets/fontello/css/motivator-embedded.css\";\nimport \"@/style.scss\";\nimport draggable from \"vuedraggable\";\n\nimport Collections from \"./components/Collections.vue\";\nimport Buckets from \"./components/Buckets.vue\";\nimport Randomize from \"./components/Randomize.vue\";\nimport Output from \"./components/Output.vue\";\n\nexport default {\n  name: \"App\",\n  components: {\n    Collections,\n    Buckets,\n    Randomize,\n    Output,\n    draggable,\n  },\n  data() {\n    //define app data\n    return {\n      appdata: {},\n      collections: [{}],\n      collectionsmenu: [],\n      cindex: 0,\n      randomlist: {},\n      showcollections: false,\n      showoutput: false,\n      outputfootnote: \"\",\n      editcollectiontitle: false,\n      showintro: true,\n      bucketscleared: 0,\n      alertmessage: \"\",\n    };\n  },\n  created() {\n    if (this.$workbox) {\n      this.$workbox.addEventListener(\"waiting\", () => {\n        this.showUpdateUI = true;\n      });\n    }\n  },\n  async accept() {\n    this.showUpdateUI = false;\n    await this.$workbox.messageSW({ type: \"SKIP_WAITING\" });\n  },  \n  mounted() {\n    //import app data from localStorage\n    if (localStorage.appdata) {\n      this.appdata = JSON.parse(localStorage.appdata);\n      this.collections = this.appdata.collections;\n      //focus on collection title if first launch\n      if (localStorage.firstrun == \"true\") {\n        this.showintro = true;\n        //this.focusInput(\"titleinput\");\n        localStorage.firstrun = \"false\";\n      }\n    }\n    //event listeners\n    this.$root.$on(\"show-output\", this.showOutput);\n  },\n  watch: {\n    //export appdata to localStorage when changed locally\n    appdata: {\n      handler(data) {\n        localStorage.appdata = JSON.stringify(data);\n      },\n      deep: true,\n    },\n    //update items when changed\n    collections: {\n      handler(data) {\n        //create navigation menu\n        this.collectionsmenu = data.map((item) => {\n          return item.title;\n        });\n        //reset menu visibility\n        this.showcollections = false;\n      },\n      deep: true,\n    },\n  },\n  methods: {\n    //Intro transition\n    animateIntro: function (dir) {\n      var scope = this;\n      //create animation timeline\n      var ai = gsap.timeline({\n        defaults: { duration: 0.2 },\n        onComplete: function () {\n          scope.showintro = false;\n        },\n      });\n      //add tween to timeline\n      ai.fromTo(\n        \".intro\",\n        {\n          opacity: 1,\n        },\n        {\n          opacity: 0,\n          ease: \"strong.easeOut\",\n        },\n        0\n      );\n      ai.pause();\n      // determine animation direction and play\n      if (dir == \"reverse\") {\n        ai.progress(1);\n        ai.reverse(0);\n\n        this.showintro = true;\n        this.$nextTick(() => {\n          //scroll to top of intro\n          this.$refs.intro.scrollTop = 0;\n        });\n      } else {\n        if (dir === this.cindex) {\n          this.$refs.bucketslist.animateBuckets();\n        }\n        ai.play();\n      }\n    },\n    //Collection options\n    addCollection: function (option) {\n      //add new collection to app data\n      var newcollection = {};\n\n      //duplicate current collection option\n      if (option === \"duplicate\") {\n        //stringify then parse to avoid mutation when copying\n        newcollection = JSON.parse(\n          JSON.stringify(this.collections[this.cindex])\n        );\n        newcollection.title += \" copy\";\n      } else {\n        //load in blank collection object if new\n        newcollection = JSON.parse(localStorage.blankcollection);\n        //change title for new collection\n        newcollection.title = \"Collection \" + (this.collections.length + 1);\n      }\n      //add new colletion to main object\n      this.collections.push(newcollection);\n      //load new collection into app\n      this.loadCollection(this.collections.length - 1, true);\n    },\n    loadCollection: function (index, isnew) {\n      //use next tick for focus event\n      this.$nextTick(function () {\n        //set focus to title for newly added collection\n        if (isnew) {\n          this.focusInput(\"titleinput\");\n        }\n        //reset menu visibility\n        this.showcollections = false;\n        //set cindex to collection: used glabally\n        this.cindex = parseInt(index);\n      });\n    },\n    //delete current collection\n    deleteCollection: function () {\n      //copy cindex before changing\n      var index = this.cindex;\n      //change cindex to account for one less item\n      if (this.cindex > 0) {\n        this.cindex = this.cindex - 1;\n      }\n      //if last collection clear items\n      if (this.collections.length <= 1) {\n        this.collections[index].title = \"Collection 1\";\n        this.collections[index].buckets = [];\n        this.collections[index].listoptions = {\n          listcount: 0,\n          listbuckets: [\"All\"],\n          preventduplicates: true,\n          bucketcycle: \"random\",\n        };\n        this.collections[index].removedeleteditems = false;\n      } else {\n        //delete current collection\n        this.collections.splice(index, 1);\n      }\n    },\n    //for editing collection title\n    focusInput: function (input) {\n      this.editcollectiontitle = true;\n      this.$nextTick(function () {\n        this.$refs[input].focus();\n        this.$refs[input].select();\n      });\n    },\n\n    //Bucket options\n    addBucket: function () {\n      var currbuckets = this.collections[this.cindex].buckets;\n      var newbucket = {\n        name: \"Bucket List \" + (currbuckets.length + 1),\n        items: [\"item 1\", \"item 2\", \"item 3\"],\n        trashed: [],\n      };\n      currbuckets.push(newbucket);\n    },\n    deleteBucket: function (index) {\n      var currbuckets = this.collections[this.cindex].buckets;\n      var currlistbuckets = this.collections[this.cindex].listoptions\n        .listbuckets;\n      var bindex = currlistbuckets.indexOf(index);\n\n      if (bindex > -1) {\n        currlistbuckets.splice(bindex, 1);\n        for (var b = bindex; b < currlistbuckets.length; b++) {\n          currlistbuckets[b]--;\n        }\n      }\n      if (currlistbuckets.length == 0) {\n        currlistbuckets[0] = \"All\";\n      }\n\n      this.$refs.bucketslist.deleted = index;\n      currbuckets.splice(index, 1);\n    },\n\n    //Randomize options\n    generateList: function (listoptions) {\n      var listcount = listoptions.listcount;\n      var listbuckets = listoptions.listbuckets;\n      var preventduplicates = listoptions.preventduplicates;\n      var bucketcycle = listoptions.bucketcycle;\n\n      //reset list data\n      this.randomlist = {};\n      this.buckets = this.collections[this.cindex].buckets;\n      this.outputfootnote = \"\";\n\n      //generate randomlistcount number if 0\n      if (listcount == 0) {\n        listcount = this.getRandomInt(\n          this.getBucketItemsLength(this.buckets, listbuckets)\n        );\n        listcount++;\n      }\n\n      //prevent duplicates: to avoid infinite loop\n      if (preventduplicates) {\n        var itemcount = this.getBucketItemsLength(this.buckets, listbuckets);\n        if (listcount > itemcount) {\n          listcount = itemcount;\n          this.outputfootnote = \"*count exceeded available items\";\n        }\n      }\n\n      var s = 0;\n      var itemindexlist = [];\n      //create loop based on user input number\n      for (var i = 0; i < listcount; i++) {\n        var thisbucket;\n\n        //if bucketcycle is RANDOM (default)\n        if (bucketcycle == \"random\" || !bucketcycle) {\n          //pick random bucket from all\n          thisbucket = this.getRandomInt(this.buckets.length);\n          //pick random bucket from selected\n          if (listbuckets && listbuckets[0] != \"All\") {\n            thisbucket = listbuckets[this.getRandomInt(listbuckets.length)];\n          }\n        }\n\n        //if bucketcycle is SEQUENTIAL\n        if (bucketcycle == \"sequential\") {\n          //pick sequential bucket from all\n          if (!listbuckets || listbuckets[0] == \"All\") {\n            thisbucket = s;\n            //reset counter if maxed\n            if (s + 1 >= this.buckets.length) {\n              s = -1;\n            }\n          }\n          //pick random bucket from selected\n          if (listbuckets && listbuckets[0] != \"All\") {\n            thisbucket = listbuckets[s];\n            //reset counter if maxed\n            if (s + 1 >= listbuckets.length) {\n              s = -1;\n            }\n          }\n          s++;\n        }\n\n        //select random item from bucket\n        var thisitem = this.getRandomInt(this.buckets[thisbucket].items.length);\n\n        //create index of item\n        var itemindex = thisbucket + \"-\" + thisitem;\n\n        //prevent duplicate: start over if duplicate\n        if (preventduplicates) {\n          if (itemindexlist.indexOf(itemindex) >= 0) {\n            i--;\n            continue;\n          }\n        }\n\n        //add index to index list\n        itemindexlist.push(itemindex);\n      }\n\n      //format items from indexlist and add to randomlist object\n      for (var x = 0; x < itemindexlist.length; x++) {\n        var bx = itemindexlist[x].split(\"-\").map(Number);\n\n        this.randomlist[bx[0]] = {\n          name: \"\",\n          items: [],\n          itemkeys: [],\n        };\n      }\n\n      for (var y = 0; y < itemindexlist.length; y++) {\n        var by = itemindexlist[y].split(\"-\").map(Number);\n\n        this.randomlist[by[0]].name = this.buckets[by[0]].name;\n        this.randomlist[by[0]].items.push(this.buckets[by[0]].items[by[1]]);\n        this.randomlist[by[0]].itemkeys.push(by[0] + \"-\" + by[1]);\n      }\n\n      this.showoutput = true;\n    },\n    getBucketItemsLength: function (buckets, bucketslist) {\n      var bucketitems = 0;\n\n      //Add all buckets to list if ALL is selected\n      if (bucketslist[0] == \"All\") {\n        bucketslist = [];\n        buckets.map((b, index) => {\n          bucketslist.push(index);\n        });\n      }\n\n      //count all bucket list items\n      bucketslist.map((listbucket) => {\n        bucketitems += buckets[listbucket].items.length;\n      });\n\n      return bucketitems;\n    },\n    getRandomInt: function (max) {\n      return Math.floor(Math.random() * Math.floor(max));\n    },\n    //hide output window\n    closeOutput: function (deleted) {\n      //remove deleted items from system\n      if (\n        deleted.length > 0 &&\n        this.collections[this.cindex].removedeleteditems\n      ) {\n        //convert deleted list to listkeys\n        var deletekeys = [];\n        var scope = this;\n        deleted.map(function (item) {\n          item = item.split(\"-\");\n          deletekeys.push(scope.randomlist[item[0]].itemkeys[item[1]]);\n        });\n        //dedupe deleted items\n        var deduped = [];\n        deletekeys.map(function (item) {\n          if (!deduped.includes(item)) {\n            deduped.push(item);\n          }\n        });\n        //sort deduped in ascending order\n        var sorted = [[-1, -1]];\n        deduped.map(function (item, index) {\n          item = item.split(\"-\").map(Number);\n          for (var i = index; i >= 0; i--) {\n            if (item[0] > sorted[i][0]) {\n              sorted.splice(i + 1, 0, item);\n              break;\n            } else if (item[0] === sorted[i][0] && item[1] > sorted[i][1]) {\n              sorted.splice(i + 1, 0, item);\n              break;\n            }\n          }\n        });\n        sorted.splice(0, 1);\n\n        //add deleted items to bucket trash\n        sorted.map(function (item) {\n          scope.collections[scope.cindex].buckets[item[0]].trashed.unshift(\n            parseInt(item[1])\n          );\n        });\n\n        //pause for animation\n        gsap.delayedCall(1, function () {\n          //loop through buckets to remove tagged items\n          //bucket loop\n          for (\n            var i = 0;\n            i < scope.collections[scope.cindex].buckets.length;\n            i++\n          ) {\n            //item loop\n            for (\n              var x = 0;\n              x < scope.collections[scope.cindex].buckets[i].trashed.length;\n              x++\n            ) {\n              var trasheditem =\n                scope.collections[scope.cindex].buckets[i].trashed[x];\n              scope.collections[scope.cindex].buckets[i].items.splice(\n                trasheditem,\n                1\n              );\n            }\n\n            //empty trash\n            scope.collections[scope.cindex].buckets[i].trashed = [];\n\n            //delete bucket if empty\n            if (scope.collections[scope.cindex].buckets[i].items.length == 0) {\n              scope.deleteBucket(i);\n              scope.showAlert();\n              //back up bucket loop for one less bucket\n              i--;\n            }\n          }\n        });\n      }\n      // finally hide output window\n      this.showOutput(false);\n    },\n    //controlls output window visibility\n    showOutput: function (data) {\n      //true to show, false to hide\n      this.showoutput = data;\n    },\n    showAlert: function () {\n      //construct alert message\n      this.bucketscleared++;\n      this.alertmessage = this.bucketscleared + \" bucket\";\n      if (this.bucketscleared > 1) {\n        this.alertmessage += \"s\";\n      }\n      this.alertmessage += \" emptied\";\n      if (this.collections[this.cindex].buckets.length === 0) {\n        this.alertmessage = \"All buckets emptied\";\n      }\n      //animate alert popup\n      var scope = this;\n      gsap.fromTo(\n        \".alert\",\n        1,\n        { opacity: 0 },\n        {\n          opacity: 2,\n          ease: \"power4.easeOut\",\n          onComplete: function () {\n            this.reverse();\n          },\n          onReverseComplete: function () {\n            //reset\n            scope.bucketscleared = 0;\n          },\n        }\n      );\n    },\n  },\n};\n</script>"]}]}